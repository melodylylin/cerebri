# Copyright (c) 2023, CogniPilot Foundation
# SPDX-License-Identifier: Apache-2.0

menuconfig CEREBRI_ACTUATE_PWM
  bool "PWM"
  depends on PWM
  depends on ZROS
  help
    This option enables pwm actuators

if CEREBRI_ACTUATE_PWM

config CEREBRI_ACTUATE_PWM_NUMBER
  int "Number of PWM actuators"
  default 1
  range 1 8
  help
    Defines number of PWM actuators 1-8

###############################################################################
menu "PWM_0"
  visible if CEREBRI_ACTUATE_PWM_NUMBER > 0

config CEREBRI_ACTUATE_PWM_OUTPUT_0
  string "Aliased output device PWM 0"
  default "aux0"
  help
    Aliased name of PWM output device used for PWM 0

config CEREBRI_ACTUATE_PWM_USE_NANO_SECONDS_0
  bool "Use nano seconds for PWM 0"
  help
    Enable to use nanoseconds for the pulse widths of PWM 0.

config CEREBRI_ACTUATE_PWM_PULSE_MIN_0
  int "Min pulse width PWM 0"
  default 1100
  range 0 9999999
  help
    Minimum allowed pulse width in micro
    (or nano if selected) seconds for PWM 0

config CEREBRI_ACTUATE_PWM_PULSE_MAX_0
  int "Max pulse width PWM 0"
  default 1900
  range 0 9999999
  help
    Maximum allowed pulse width in micro
    (or nano if selected) seconds for PWM 0

config CEREBRI_ACTUATE_PWM_PULSE_CENTER_0
  int "Center of pulse width PWM 0"
  default 1500
  range 0 9999999
  help
    Center of pulse width in micro
    (or nano if selected) seconds for PWM 0
    This is the value it also uses on startup before
    getting message signals or arming.

config CEREBRI_ACTUATE_PWM_INDEX_0
  int "actuator index for PWM 0"
  default 0
  help
    The actuator message index to use for position,
    velocity or nomalized fields

menuconfig CEREBRI_ACTUATE_PWM_LINEAR_0
  bool "LINEAR PWM 0"
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro (or nano if selected) seconds with
    a linear approximation using slope
    intercept formula to best fit your actuator.

if CEREBRI_ACTUATE_PWM_LINEAR_0

config CEREBRI_ACTUATE_PWM_USE_POS_0
  bool "Use actuator position PWM 0"
  help
    Use actuator message position instead of velocity for
    CEREBRI_ACTUATE_PWM_INDEX_0

config CEREBRI_ACTUATE_PWM_LINEAR_M_DIV_0
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_M_0
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config CEREBRI_ACTUATE_PWM_LINEAR_B_DIV_0
  int "divisor to divide linear intercept B"
  default 1000
  help
    The divisor value to divide intercept constant B of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_B_0
  int "linear intercept B (divisor scaled)"
  default 1500000
  help
    The intercept constant B value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_B_DIV (default 1000)

endif #CEREBRI_ACTUATE_PWM_LINEAR_0

endmenu #PWM_0

###############################################################################
menu "PWM_1"
  visible if CEREBRI_ACTUATE_PWM_NUMBER > 1

config CEREBRI_ACTUATE_PWM_OUTPUT_1
  string "Aliased output device PWM 1"
  default "aux1"
  help
    Aliased name of PWM output device used for PWM 1

config CEREBRI_ACTUATE_PWM_USE_NANO_SECONDS_1
  bool "Use nano seconds for PWM 1"
  help
    Enable to use nanoseconds for the pulse widths of PWM 1.

config CEREBRI_ACTUATE_PWM_PULSE_MIN_1
  int "Min pulse width PWM 1"
  default 1100
  range 0 9999999
  help
    Minimum allowed pulse width in micro
    (or nano if selected) seconds for PWM 1

config CEREBRI_ACTUATE_PWM_PULSE_MAX_1
  int "Max pulse width PWM 1"
  default 1900
  range 0 9999999
  help
    Maximum allowed pulse width in micro
    (or nano if selected) seconds for PWM 1

config CEREBRI_ACTUATE_PWM_PULSE_CENTER_1
  int "Center of pulse width PWM 1"
  default 1500
  range 0 9999999
  help
    Center of pulse width in micro
    (or nano if selected) seconds for PWM 1
    This is the value it also uses on startup before
    getting message signals or arming.

config CEREBRI_ACTUATE_PWM_INDEX_1
  int "actuator index for PWM 1"
  default 1
  help
    The actuator message index to use for position,
    velocity or nomalized fields

menuconfig CEREBRI_ACTUATE_PWM_LINEAR_1
  bool "LINEAR PWM 1"
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro (or nano if selected) seconds with
    a linear approximation using slope
    intercept formula to best fit your actuator.

if CEREBRI_ACTUATE_PWM_LINEAR_1

config CEREBRI_ACTUATE_PWM_USE_POS_1
  bool "Use actuator position PWM 1"
  help
    Use actuator message position instead of velocity for
    CEREBRI_ACTUATE_PWM_INDEX_1

config CEREBRI_ACTUATE_PWM_LINEAR_M_DIV_1
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_M_1
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config CEREBRI_ACTUATE_PWM_LINEAR_B_DIV_1
  int "divisor to divide linear intercept B"
  default 1000
  help
    The divisor value to divide intercept constant B of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_B_1
  int "linear intercept B (divisor scaled)"
  default 1500000
  help
    The intercept constant B value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_B_DIV (default 1000)

endif #CEREBRI_ACTUATE_PWM_LINEAR_1

endmenu #PWM_1

###############################################################################
menu "PWM_2"
  visible if CEREBRI_ACTUATE_PWM_NUMBER > 2

config CEREBRI_ACTUATE_PWM_OUTPUT_2
  string "Aliased output device PWM 2"
  default "aux2"
  help
    Aliased name of PWM output device used for PWM 2

config CEREBRI_ACTUATE_PWM_USE_NANO_SECONDS_2
  bool "Use nano seconds for PWM 2"
  help
    Enable to use nanoseconds for the pulse widths of PWM 2.

config CEREBRI_ACTUATE_PWM_PULSE_MIN_2
  int "Min pulse width PWM 2"
  default 1100
  range 0 9999999
  help
    Minimum allowed pulse width in micro
    (or nano if selected) seconds for PWM 2

config CEREBRI_ACTUATE_PWM_PULSE_MAX_2
  int "Max pulse width PWM 2"
  default 1900
  range 0 9999999
  help
    Maximum allowed pulse width in micro
    (or nano if selected) seconds for PWM 2

config CEREBRI_ACTUATE_PWM_PULSE_CENTER_2
  int "Center of pulse width PWM 2"
  default 1500
  range 0 9999999
  help
    Center of pulse width in micro
    (or nano if selected) seconds for PWM 2
    This is the value it also uses on startup before
    getting message signals or arming.

config CEREBRI_ACTUATE_PWM_INDEX_2
  int "actuator index for PWM 2"
  default 2
  help
    The actuator message index to use for position,
    velocity or nomalized fields

menuconfig CEREBRI_ACTUATE_PWM_LINEAR_2
  bool "LINEAR PWM 2"
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro (or nano if selected) seconds with
    a linear approximation using slope
    intercept formula to best fit your actuator.

if CEREBRI_ACTUATE_PWM_LINEAR_2

config CEREBRI_ACTUATE_PWM_USE_POS_2
  bool "Use actuator position PWM 2"
  help
    Use actuator message position instead of velocity for
    CEREBRI_ACTUATE_PWM_INDEX_2

config CEREBRI_ACTUATE_PWM_LINEAR_M_DIV_2
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_M_2
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config CEREBRI_ACTUATE_PWM_LINEAR_B_DIV_2
  int "divisor to divide linear intercept B"
  default 1000
  help
    The divisor value to divide intercept constant B of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_B_2
  int "linear intercept B (divisor scaled)"
  default 1500000
  help
    The intercept constant B value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_B_DIV (default 1000)

endif #CEREBRI_ACTUATE_PWM_LINEAR_2

endmenu #PWM_2

###############################################################################
menu "PWM_3"
  visible if CEREBRI_ACTUATE_PWM_NUMBER > 3

config CEREBRI_ACTUATE_PWM_OUTPUT_3
  string "Aliased output device PWM 3"
  default "aux3"
  help
    Aliased name of PWM output device used for PWM 3

config CEREBRI_ACTUATE_PWM_USE_NANO_SECONDS_3
  bool "Use nano seconds for PWM 3"
  help
    Enable to use nanoseconds for the pulse widths of PWM 3.

config CEREBRI_ACTUATE_PWM_PULSE_MIN_3
  int "Min pulse width PWM 3"
  default 1100
  range 0 9999999
  help
    Minimum allowed pulse width in micro
    (or nano if selected) seconds for PWM 3

config CEREBRI_ACTUATE_PWM_PULSE_MAX_3
  int "Max pulse width PWM 3"
  default 1900
  range 0 9999999
  help
    Maximum allowed pulse width in micro
    (or nano if selected) seconds for PWM 3

config CEREBRI_ACTUATE_PWM_PULSE_CENTER_3
  int "Center of pulse width PWM 3"
  default 1500
  range 0 9999999
  help
    Center of pulse width in micro
    (or nano if selected) seconds for PWM 3
    This is the value it also uses on startup before
    getting message signals or arming.

config CEREBRI_ACTUATE_PWM_INDEX_3
  int "actuator index for PWM 3"
  default 3
  help
    The actuator message index to use for position,
    velocity or nomalized fields

menuconfig CEREBRI_ACTUATE_PWM_LINEAR_3
  bool "LINEAR PWM 3"
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro (or nano if selected) seconds with
    a linear approximation using slope
    intercept formula to best fit your actuator.

if CEREBRI_ACTUATE_PWM_LINEAR_3

config CEREBRI_ACTUATE_PWM_USE_POS_3
  bool "Use actuator position PWM 3"
  help
    Use actuator message position instead of velocity for
    CEREBRI_ACTUATE_PWM_INDEX_3

config CEREBRI_ACTUATE_PWM_LINEAR_M_DIV_3
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_M_3
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config CEREBRI_ACTUATE_PWM_LINEAR_B_DIV_3
  int "divisor to divide linear intercept B"
  default 1000
  help
    The divisor value to divide intercept constant B of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_B_3
  int "linear intercept B (divisor scaled)"
  default 1500000
  help
    The intercept constant B value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_B_DIV (default 1000)

endif #CEREBRI_ACTUATE_PWM_LINEAR_3

endmenu #PWM_3

###############################################################################
menu "PWM_4"
  visible if CEREBRI_ACTUATE_PWM_NUMBER > 4

config CEREBRI_ACTUATE_PWM_OUTPUT_4
  string "Aliased output device PWM 4"
  default "aux4"
  help
    Aliased name of PWM output device used for PWM 4

config CEREBRI_ACTUATE_PWM_USE_NANO_SECONDS_4
  bool "Use nano seconds for PWM 4"
  help
    Enable to use nanoseconds for the pulse widths of PWM 4.

config CEREBRI_ACTUATE_PWM_PULSE_MIN_4
  int "Min pulse width PWM 4"
  default 1100
  range 0 9999999
  help
    Minimum allowed pulse width in micro
    (or nano if selected) seconds for PWM 4

config CEREBRI_ACTUATE_PWM_PULSE_MAX_4
  int "Max pulse width PWM 4"
  default 1900
  range 0 9999999
  help
    Maximum allowed pulse width in micro
    (or nano if selected) seconds for PWM 4

config CEREBRI_ACTUATE_PWM_PULSE_CENTER_4
  int "Center of pulse width PWM 4"
  default 1500
  range 0 9999999
  help
    Center of pulse width in micro
    (or nano if selected) seconds for PWM 4
    This is the value it also uses on startup before
    getting message signals or arming.

config CEREBRI_ACTUATE_PWM_INDEX_4
  int "actuator index for PWM 4"
  default 4
  help
    The actuator message index to use for position,
    velocity or nomalized fields

menuconfig CEREBRI_ACTUATE_PWM_LINEAR_4
  bool "LINEAR PWM 4"
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro (or nano if selected) seconds with
    a linear approximation using slope
    intercept formula to best fit your actuator.

if CEREBRI_ACTUATE_PWM_LINEAR_4

config CEREBRI_ACTUATE_PWM_USE_POS_4
  bool "Use actuator position PWM 4"
  help
    Use actuator message position instead of velocity for
    CEREBRI_ACTUATE_PWM_INDEX_4

config CEREBRI_ACTUATE_PWM_LINEAR_M_DIV_4
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_M_4
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config CEREBRI_ACTUATE_PWM_LINEAR_B_DIV_4
  int "divisor to divide linear intercept B"
  default 1000
  help
    The divisor value to divide intercept constant B of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_B_4
  int "linear intercept B (divisor scaled)"
  default 1500000
  help
    The intercept constant B value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_B_DIV (default 1000)

endif #CEREBRI_ACTUATE_PWM_LINEAR_4

endmenu #PWM_4

###############################################################################
menu "PWM_5"
  visible if CEREBRI_ACTUATE_PWM_NUMBER > 5

config CEREBRI_ACTUATE_PWM_OUTPUT_5
  string "Aliased output device PWM 5"
  default "aux5"
  help
    Aliased name of PWM output device used for PWM 5

config CEREBRI_ACTUATE_PWM_USE_NANO_SECONDS_5
  bool "Use nano seconds for PWM 5"
  help
    Enable to use nanoseconds for the pulse widths of PWM 5.

config CEREBRI_ACTUATE_PWM_PULSE_MIN_5
  int "Min pulse width PWM 5"
  default 1100
  range 0 9999999
  help
    Minimum allowed pulse width in micro
    (or nano if selected) seconds for PWM 5

config CEREBRI_ACTUATE_PWM_PULSE_MAX_5
  int "Max pulse width PWM 5"
  default 1900
  range 0 9999999
  help
    Maximum allowed pulse width in micro
    (or nano if selected) seconds for PWM 5

config CEREBRI_ACTUATE_PWM_PULSE_CENTER_5
  int "Center of pulse width PWM 5"
  default 1500
  range 0 9999999
  help
    Center of pulse width in micro
    (or nano if selected) seconds for PWM 5
    This is the value it also uses on startup before
    getting message signals or arming.

config CEREBRI_ACTUATE_PWM_INDEX_5
  int "actuator index for PWM 5"
  default 5
  help
    The actuator message index to use for position,
    velocity or nomalized fields

menuconfig CEREBRI_ACTUATE_PWM_LINEAR_5
  bool "LINEAR PWM 5"
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro (or nano if selected) seconds with
    a linear approximation using slope
    intercept formula to best fit your actuator.

if CEREBRI_ACTUATE_PWM_LINEAR_5

config CEREBRI_ACTUATE_PWM_USE_POS_5
  bool "Use actuator position PWM 5"
  help
    Use actuator message position instead of velocity for
    CEREBRI_ACTUATE_PWM_INDEX_5

config CEREBRI_ACTUATE_PWM_LINEAR_M_DIV_5
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_M_5
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config CEREBRI_ACTUATE_PWM_LINEAR_B_DIV_5
  int "divisor to divide linear intercept B"
  default 1000
  help
    The divisor value to divide intercept constant B of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_B_5
  int "linear intercept B (divisor scaled)"
  default 1500000
  help
    The intercept constant B value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_B_DIV (default 1000)

endif #CEREBRI_ACTUATE_PWM_LINEAR_5

endmenu #PWM_5

###############################################################################
menu "PWM_6"
  visible if CEREBRI_ACTUATE_PWM_NUMBER > 6

config CEREBRI_ACTUATE_PWM_OUTPUT_6
  string "Aliased output device PWM 6"
  default "aux6"
  help
    Aliased name of PWM output device used for PWM 6

config CEREBRI_ACTUATE_PWM_USE_NANO_SECONDS_6
  bool "Use nano seconds for PWM 6"
  help
    Enable to use nanoseconds for the pulse widths of PWM 6.

config CEREBRI_ACTUATE_PWM_PULSE_MIN_6
  int "Min pulse width PWM 6"
  default 1100
  range 0 9999999
  help
    Minimum allowed pulse width in micro
    (or nano if selected) seconds for PWM 6

config CEREBRI_ACTUATE_PWM_PULSE_MAX_6
  int "Max pulse width PWM 6"
  default 1900
  range 0 9999999
  help
    Maximum allowed pulse width in micro
    (or nano if selected) seconds for PWM 6

config CEREBRI_ACTUATE_PWM_PULSE_CENTER_6
  int "Center of pulse width PWM 6"
  default 1500
  range 0 9999999
  help
    Center of pulse width in micro
    (or nano if selected) seconds for PWM 6
    This is the value it also uses on startup before
    getting message signals or arming.

config CEREBRI_ACTUATE_PWM_INDEX_6
  int "actuator index for PWM 6"
  default 6
  help
    The actuator message index to use for position,
    velocity or nomalized fields

menuconfig CEREBRI_ACTUATE_PWM_LINEAR_6
  bool "LINEAR PWM 6"
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro (or nano if selected) seconds with
    a linear approximation using slope
    intercept formula to best fit your actuator.

if CEREBRI_ACTUATE_PWM_LINEAR_6

config CEREBRI_ACTUATE_PWM_USE_POS_6
  bool "Use actuator position PWM 6"
  help
    Use actuator message position instead of velocity for
    CEREBRI_ACTUATE_PWM_INDEX_6

config CEREBRI_ACTUATE_PWM_LINEAR_M_DIV_6
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_M_6
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config CEREBRI_ACTUATE_PWM_LINEAR_B_DIV_6
  int "divisor to divide linear intercept B"
  default 1000
  help
    The divisor value to divide intercept constant B of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_B_6
  int "linear intercept B (divisor scaled)"
  default 1500000
  help
    The intercept constant B value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_B_DIV (default 1000)

endif #CEREBRI_ACTUATE_PWM_LINEAR_6

endmenu #PWM_6

###############################################################################
menu "PWM_7"
  visible if CEREBRI_ACTUATE_PWM_NUMBER > 7

config CEREBRI_ACTUATE_PWM_OUTPUT_7
  string "Aliased output device PWM 7"
  default "aux7"
  help
    Aliased name of PWM output device used for PWM 7

config CEREBRI_ACTUATE_PWM_USE_NANO_SECONDS_7
  bool "Use nano seconds for PWM 7"
  help
    Enable to use nanoseconds for the pulse widths of PWM 7.

config CEREBRI_ACTUATE_PWM_PULSE_MIN_7
  int "Min pulse width PWM 7"
  default 1100
  range 0 9999999
  help
    Minimum allowed pulse width in micro
    (or nano if selected) seconds for PWM 7

config CEREBRI_ACTUATE_PWM_PULSE_MAX_7
  int "Max pulse width PWM 7"
  default 1900
  range 0 9999999
  help
    Maximum allowed pulse width in micro
    (or nano if selected) seconds for PWM 7

config CEREBRI_ACTUATE_PWM_PULSE_CENTER_7
  int "Center of pulse width PWM 7"
  default 1500
  range 0 9999999
  help
    Center of pulse width in micro
    (or nano if selected) seconds for PWM 7
    This is the value it also uses on startup before
    getting message signals or arming.

config CEREBRI_ACTUATE_PWM_INDEX_7
  int "actuator index for PWM 7"
  default 7
  help
    The actuator message index to use for position,
    velocity or nomalized fields

menuconfig CEREBRI_ACTUATE_PWM_LINEAR_7
  bool "LINEAR PWM 7"
  help
    Allows you to take in an actuator position or velocity
    index and calculate [rad, m] or [rad/s, m/s] -> PWM
    micro (or nano if selected) seconds with
    a linear approximation using slope
    intercept formula to best fit your actuator.

if CEREBRI_ACTUATE_PWM_LINEAR_7

config CEREBRI_ACTUATE_PWM_USE_POS_7
  bool "Use actuator position PWM 7"
  help
    Use actuator message position instead of velocity for
    CEREBRI_ACTUATE_PWM_INDEX_7

config CEREBRI_ACTUATE_PWM_LINEAR_M_DIV_7
  int "divisor to divide linear slope M"
  default 1000
  help
    The divisor value to divide slope constant M value of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default),
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_M_7
  int "linear slope M (divisor scaled)"
  default 1000
  help
    The slope constant M value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_M_DIV (default 1000)

config CEREBRI_ACTUATE_PWM_LINEAR_B_DIV_7
  int "divisor to divide linear intercept B"
  default 1000
  help
    The divisor value to divide intercept constant B of the
    linearized PWM/[vel or pos] by [1, 10, 100, 1000 (default), 
    10000, 100000, ...]

config CEREBRI_ACTUATE_PWM_LINEAR_B_7
  int "linear intercept B (divisor scaled)"
  default 1500000
  help
    The intercept constant B value of the linearized PWM/[vel or pos]
    divided by the divisor CEREBRI_ACTUATE_PWM_LINEAR_B_DIV (default 1000)

endif #CEREBRI_ACTUATE_PWM_LINEAR_7

endmenu #PWM_7

module = CEREBRI_ACTUATE_PWM
module-str = actuate_pwm
source "subsys/logging/Kconfig.template.log_config"

endif #CEREBRI_ACTUATE_PWM
